{"version":3,"sources":["webpack:///./src/pages/lasir/index.js"],"names":["query","Lasir","props","lasir","data","allMarkdownRemark","edges","json","allLasirSlidesJson","bodyClass","title","className","map","edge","key","node","frontmatter","path","to","excerpt","image","src","text","href","link"],"mappings":"+MAoEaA,EAAK,aA8BHC,UA7FD,SAACC,GACb,IAAMC,EAAQD,EAAME,KAAKC,kBAAkBC,MACrCC,EAAOL,EAAME,KAAKI,mBAAmBF,MAC3C,OACE,kBAAC,IAAD,CAAQG,UAAU,iBAChB,kBAAC,IAAD,CAAKC,MAAM,UACX,yBAAKC,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,yCAMR,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACZR,EAAMS,KAAI,SAAAC,GAAI,OACb,yBAAKC,IAAKD,EAAKE,KAAKC,YAAYC,KAAMN,UAAU,wBAC9C,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,gBACb,4BACE,kBAAC,IAAD,CAAMO,GAAIL,EAAKE,KAAKC,YAAYC,MAAOJ,EAAKE,KAAKC,YAAYN,QAE/D,2BAAIG,EAAKE,KAAKI,iBAQ1B,yBAAKR,UAAU,uCACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,0BAAd,WAGCJ,EAAKK,KAAI,SAAAC,GAAI,OACZ,yBAAKF,UAAU,oCAEX,yBAAKA,UAAU,gCACZE,EAAKE,KAAKK,OACT,yBAAKT,UAAU,iBACb,yBAAKU,IAAKR,EAAKE,KAAKK,UAI1B,yBAAKT,UAAU,gCACb,wBAAIA,UAAU,iBAAiBE,EAAKE,KAAKL,OACzC,yBAAKC,UAAU,mBACZE,EAAKE,KAAKO,KACX,2BAAG,uBAAGC,KAAMV,EAAKE,KAAKS,MAAnB","file":"component---src-pages-lasir-index-js-6028c8e0778985654961.js","sourcesContent":["import React from 'react';\nimport { Link, graphql } from 'gatsby';\nimport SEO from '../../components/SEO';\nimport Layout from '../../layouts/index';\n\nconst Lasir = (props) => {\n  const lasir = props.data.allMarkdownRemark.edges;\n  const json = props.data.allLasirSlidesJson.edges;\n  return (\n    <Layout bodyClass=\"page-services\">\n      <SEO title=\"LASIR\" />\n      <div className=\"intro\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h1>LASIR</h1>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container pb-6\">\n        <div className=\"row\">\n          {lasir.map(edge => (\n            <div key={edge.node.frontmatter.path} className=\"col-12 col-md-4 mb-1\">\n              <div className=\"card service service-teaser\">\n                <div className=\"card-content\">\n                  <h2>\n                    <Link to={edge.node.frontmatter.path}>{edge.node.frontmatter.title}</Link>\n                  </h2>\n                  <p>{edge.node.excerpt}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"container pt-5 pb-5 pt-md-7 pb-md-7\">\n        <div className=\"col-12\">\n          <h2 className=\"title-3 text-dark mb-4\">Slides</h2>\n        </div>\n\n          {json.map(edge => (\n            <div className=\"row justify-content-center slide\">\n\n                <div className=\"col-6 col-md-6 col-lg-6 mb-6\">\n                  {edge.node.image && (\n                    <div className=\"feature-image\">\n                      <img src={edge.node.image} />\n                    </div>\n                  )}\n                </div>\n                <div className=\"col-6 col-md-6 col-lg-6 mb-6\">\n                  <h2 className=\"feature-title\">{edge.node.title}</h2>\n                  <div className=\"feature-content\">\n                    {edge.node.text}\n                    <p><a href={edge.node.link}>Read moreÂ»</a></p>\n                  </div>\n                </div>\n              </div>\n          ))}\n\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query  {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/lasir\\//\" } }\n      sort: { fields: [frontmatter___weight, frontmatter___title], order: ASC }\n    ) {\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            title\n            path\n          }\n        }\n      }\n    }\n    allLasirSlidesJson {\n      edges {\n        node {\n          id\n          title\n          text\n          link\n          image\n        }\n      }\n    }\n  }\n`;\n\nexport default Lasir;\n"],"sourceRoot":""}