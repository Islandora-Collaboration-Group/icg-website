{"version":3,"sources":["webpack:///./src/pages/members/index.js"],"names":["query","Team","props","teams","data","team","group","json","allFeaturesJson","edges","bodyClass","title","className","map","edge","key","node","id","image","href","cid","src","repository_url","target","repository_name","frontmatter","college","path","alt","jobtitle","linkedinurl","email","dangerouslySetInnerHTML","__html","html"],"mappings":"2FAAA,8FAmGaA,EAAK,aAuCHC,UArIF,SAACC,GACZ,IAAMC,EAAQD,EAAME,KAAKC,KAAKC,MACxBC,EAAOL,EAAME,KAAKI,gBAAgBC,MACxC,OACE,kBAAC,IAAD,CAAQC,UAAU,cAChB,kBAAC,IAAD,CAAKC,MAAM,YACX,yBAAKC,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,UACb,4CACA,qFAOR,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,uCACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,UACb,wBAAIA,UAAU,0BAAd,wBAEDL,EAAKM,KAAI,SAAAC,GAAI,OACZ,yBAAKC,IAAKD,EAAKE,KAAKC,GAAIL,UAAU,iCAChC,yBAAKA,UAAU,WACZE,EAAKE,KAAKE,OACT,yBAAKN,UAAU,iBACb,uBAAGO,KAAM,IAAML,EAAKE,KAAKI,KAAK,yBAAKC,IAAKP,EAAKE,KAAKE,UAGtD,wBAAIN,UAAU,iBAAgB,uBAAGO,KAAM,IAAML,EAAKE,KAAKI,KAAMN,EAAKE,KAAKL,QACvE,yBAAKC,UAAU,mBAAkB,uBAAGO,KAAML,EAAKE,KAAKM,eAAgBC,OAAO,UAAUT,EAAKE,KAAKQ,yBAMxGrB,EAAMU,KAAI,SAAAP,GAAK,OACd,yBAAKM,UAAU,UACb,yBAAKA,UAAU,OACb,wBAAIK,GAAIX,EAAMG,MAAM,GAAGO,KAAKS,YAAYL,KAAMd,EAAMG,MAAM,GAAGO,KAAKS,YAAYC,UAEhF,yBAAKd,UAAU,OACdN,EAAMG,MAAMI,KAAI,SAAAC,GAAI,OACnB,yBAAKC,IAAKD,EAAKE,KAAKS,YAAYE,KAAMf,UAAU,wBAC9C,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBACZE,EAAKE,KAAKS,YAAYP,OACrB,yBAAKN,UAAU,cACb,yBACEgB,IAAKd,EAAKE,KAAKS,YAAYd,MAC3BC,UAAU,iBACVS,IAAKP,EAAKE,KAAKS,YAAYP,UAKnC,yBAAKN,UAAU,cACb,wBAAIA,UAAU,cAAcE,EAAKE,KAAKS,YAAYd,OAClD,wBAAIC,UAAU,aACZ,4BACE,gCAASE,EAAKE,KAAKS,YAAYI,WAEjC,4BACE,uBAAGN,OAAO,SAASJ,KAAML,EAAKE,KAAKS,YAAYK,aAC5ChB,EAAKE,KAAKS,YAAYK,cAG3B,4BACE,uBAAGX,KAAML,EAAKE,KAAKS,YAAYM,OAAQjB,EAAKE,KAAKS,YAAYM,WAKrE,yBACEnB,UAAU,eACVoB,wBAAyB,CAAEC,OAAQnB,EAAKE,KAAKkB","file":"component---src-pages-members-index-js-1f407fa3729d1af2e95e.js","sourcesContent":["import React from 'react';\nimport { graphql } from 'gatsby';\nimport SEO from '../../components/SEO';\nimport Layout from '../../layouts/index';\n\nconst Team = (props) => {\n  const teams = props.data.team.group;\n  const json = props.data.allFeaturesJson.edges;\n  return (\n    <Layout bodyClass=\"page-teams\">\n      <SEO title=\"Members\" />\n      <div className=\"intro\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <h1>Meet the ICG</h1>\n              <p>\n                The ICG is comprised of __ member institutions ...\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"container pb-6\">\n        <div className=\"row\">\n          <div className=\"container pt-5 pb-5 pt-md-7 pb-md-7\">\n            <div className=\"row justify-content-center\">\n              <div className=\"col-12\">\n                <h2 className=\"title-3 text-dark mb-4\">Member Institutions</h2>\n              </div>\n              {json.map(edge => (\n                <div key={edge.node.id} className=\"col-12 col-md-6 col-lg-4 mb-2\">\n                  <div className=\"feature\">\n                    {edge.node.image && (\n                      <div className=\"feature-image\">\n                        <a href={\"#\" + edge.node.cid}><img src={edge.node.image} /></a>\n                      </div>\n                    )}\n                    <h3 className=\"feature-title\"><a href={\"#\" + edge.node.cid}>{edge.node.title}</a></h3>\n                    <div className=\"feature-content\"><a href={edge.node.repository_url} target=\"_blank\">{edge.node.repository_name}</a></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n          {teams.map(group => (\n            <div className=\"col-12\">\n              <div className=\"row\">\n                <h3 id={group.edges[0].node.frontmatter.cid}>{group.edges[0].node.frontmatter.college}</h3>\n              </div>\n              <div className=\"row\">\n              {group.edges.map(edge => (\n                <div key={edge.node.frontmatter.path} className=\"col-12 col-md-6 mb-1\">\n                  <div className=\"team card-two\">\n                    <div className=\"card-header\">\n                      <div className=\"card-header-left\">\n                        {edge.node.frontmatter.image && (\n                          <div className=\"card-image\">\n                            <img\n                              alt={edge.node.frontmatter.title}\n                              className=\"img-fluid mb-2\"\n                              src={edge.node.frontmatter.image}\n                            />\n                          </div>\n                        )}\n                      </div>\n                      <div className=\"card-right\">\n                        <h2 className=\"card-title\">{edge.node.frontmatter.title}</h2>\n                        <ul className=\"card-meta\">\n                          <li>\n                            <strong>{edge.node.frontmatter.jobtitle}</strong>\n                          </li>\n                          <li>\n                            <a target=\"_blank\" href={edge.node.frontmatter.linkedinurl}>\n                              {edge.node.frontmatter.linkedinurl}\n                            </a>\n                          </li>\n                          <li>\n                            <a href={edge.node.frontmatter.email}>{edge.node.frontmatter.email}</a>\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                    <div\n                      className=\"team-content\"\n                      dangerouslySetInnerHTML={{ __html: edge.node.html }}\n                    />\n                  </div>\n                </div>\n              ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query TeamQuery {\n  team: allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/members/\"}}, sort: {fields: [frontmatter___cid], order: DESC}) {\n    group(field: frontmatter___cid) {\n      fieldValue\n      totalCount\n      edges {\n        node {\n          id\n          html\n          frontmatter {\n            title\n            path\n            image\n            jobtitle\n            linkedinurl\n            email\n            cid\n            college\n          }\n        }\n      }\n    }\n  }\n  allFeaturesJson(sort: {fields: cid, order: ASC}) {\n    edges {\n      node {\n        id\n        title\n        repository_name\n        repository_url\n        image\n        cid\n      }\n    }\n  }\n}\n`;\n\nexport default Team;\n"],"sourceRoot":""}